# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: MIAM CI'S WORKFLOWS

on:
  push:
    branches:
      - master
      - 'feature/**'
      - 'fix/**'
      - 'task/**'
  pull_request:
    branches: [ master ]

jobs:
  branch-naming-rules:
    runs-on: ubuntu-latest
    steps:
      - uses: deepakputhraya/action-branch-name@master
        with:
          regex: '/.*' # Regex the branch should match. This example enforces grouping
          allowed_prefixes: 'feature,fix,task' # All branches should start with the given prefix
          ignore: master # Ignore exactly matching branch names from convention
          min_length: 15 # Min length of the branch name
          max_length: 80 # Max length of the branch name

  test:
    needs: branch-naming-rules
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
            # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Test
        run: ./gradlew test sonarqube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-images:
    needs: test
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' }}

    steps:
      # Check out the repo
      - name: Checkout
        uses: actions/checkout@v2
      # Log into Dockhub repository
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      ###### Generate backend jar
      - name: move to backend
        run: cd backend
      # gradle jar
      - name: Generate gradle jar
        run: gradle clean build
      # move back
      - name: move back
        run: cd ..
      # Build the images
      - name: Build the docker-compose stack
        run: docker-compose build
      # List images
      - name: List images
        run: docker images
      # Push images
      - name: Push images
        run: docker-compose push