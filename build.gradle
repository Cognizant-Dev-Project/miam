apply plugin: 'java'

def frontend = project(':frontend').projectDir
def backend =project(':backend').projectDir

String taskName = "${project.gradle.startParameter.taskNames}"
taskName = taskName
        .replace("App", "")
        .replace("]", "")
        .replace("[","")
/**
 *  Command to launch yarn install/test/build
 */
task frontendCommand(type: Exec){
    workingDir "$frontend"
    println "Execute: yarn ${taskName}"
    if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
        commandLine "yarn.cmd", "${taskName}"
    } else {
        commandLine "yarn", "${taskName}"
    }
}
/**
 *  Command to launch maven install/test/build
 */
task backendCommand(type: Exec){
    workingDir "$backend"
    doFirst {
        println "Execute: mvn ${taskName}"
    }
    if(taskName.contains("build")){
        taskName ="package"
    }
    if(taskName.contains("start")){
        taskName ="spring-boot:run"
    }
    commandLine "mvn", "${taskName}"
}
/**
 * Creating Task: install test build
 * @param taskType
 */
void createTask(String taskType) {
    String taskName = taskType + "App"
    task (taskName) {
        if (project.hasProperty("type")) {
            if(type.contains("frontend")){
                dependsOn "frontendCommand"
            }
            if(type.contains("backend")){
                dependsOn "backendCommand"
            }
        }
        else{
            dependsOn "frontendCommand"
            finalizedBy "backendCommand"
        }
    }
}
// Setting goal|task
String[] listTasks = ["install", "test", "build", "start"];

// Instanciate goal|task
for(String task : listTasks) {
    createTask(task);
}